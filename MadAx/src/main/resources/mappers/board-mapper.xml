<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.javaman.madax.board.model.mapper.BoardMapper">
  
  
	
	<!-- ===========================일반 게시글 조회==================================-->
  
  	<!--게시글 수 조회-->
  	<select id="ListCount" resultType="_int">
		SELECT COUNT(*) FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		AND CATEGORY_CODE = #{categoryCode}
	  </select>
	  
	  
	  
  
  	<!--게시글 조회-->
 	<select id="selectBoard" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, WRITE_DATE, BOARD_CONTENT,PROFILE_IMG,
		
		(SELECT COUNT(*) FROM "BOARD_LIKE" L 
			WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		
		FROM BOARD B
		JOIN "MEMBER" USING("MEMBER_NO")
		
		WHERE BOARD_CODE = #{boardCode}
			<if test="categoryCode != 0">
				AND CATEGORY_CODE = #{categoryCode}
			</if>
			
			<if test="categoryCodeTwo > 1">
				AND CATEGORY_CODE_TWO = #{categoryCodeTwo}
			</if>
		
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- ===========================검색 게시글 조회==================================-->
	
	<!-- 검색어 일치 게시글 수 조회 -->
	<select id="searchListCount" resultType="_int">
		SELECT COUNT(*) FROM "BOARD"

		<!-- 작성자 검색일 경우 MEMBER 테이블 JOIN -->
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>

		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}

		<choose>
			<!-- 제목 검색 -->
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<!-- 내용 검색 -->
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>

			<!-- 제목 + 내용 검색 -->
			<when test='key == "tc"'>
				AND ( BOARD_TITLE LIKE '%${query}%' 
					  OR BOARD_CONTENT LIKE '%${query}%')
			</when>

			<!-- 작성자 검색 -->
			<when test='key == "w"'>
				AND MEMBER_NICKNAME LIKE '%${query}%' 
			</when>
		</choose>

	</select>



	<!-- 검색이 일치 게시글 목록 조회-->
	<select id="searchBoardList" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_COUNT, MEMBER_NICKNAME,


			(SELECT COUNT(*) FROM "BOARD_COMMENT" C
			 WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,

			(SELECT COUNT(*) FROM "BOARD_LIKE" L
			 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,

			(SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I
			 WHERE I.BOARD_NO = B.BOARD_NO
			 AND IMG_ORDER = 0) THUMBNAIL

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}

		<choose>
			<!-- 제목 검색 -->
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<!-- 내용 검색 -->
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>

			<!-- 제목 + 내용 검색 -->
			<when test='key == "tc"'>
				AND ( BOARD_TITLE LIKE '%${query}%' 
					  OR BOARD_CONTENT LIKE '%${query}%')
			</when>

			<!-- 작성자 검색 -->
			<when test='key == "w"'>
				AND MEMBER_NICKNAME LIKE '%${query}%' 
			</when>
		</choose>

		ORDER BY BOARD_NO DESC
	</select>
	

	<!-- ===========================게시글 상세 조회==================================-->
	
	<!--게시글 상세조회-->	
	<select id="detail" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_COUNT,
			TO_CHAR(WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')WRITE_DATE,
			MEMBER_NICKNAME, PROFILE_IMG, MEMBER_NO,

			(SELECT COUNT(*) FROM "BOARD_LIKE" L 
			WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- ===========================이미지 조회==================================-->
	
	
	<!-- 이미지 조회 -->
   <select id="selectImageList" resultType="BoardImg">
      SELECT * FROM BOARD_IMG
      WHERE BOARD_NO = #{boardNo}
      ORDER BY IMG_ORDER
   </select>
   
   
   <!-- ===========================좋아요==================================-->
   
   <!-- 게시글 좋아요 여부 확인 -->
   <select id="likeCheck" resultType="_int">
	   SELECT COUNT(*) FROM BOARD_LIKE
	   WHERE BOARD_NO = #{boardNo}
	   AND MEMBER_NO = #{memberNo}
	</select>
   
	
	<!-- 좋아요 삭제-->
	<delete id="deleteBoardLike">
		DELETE 
		FROM "BOARD_LIKE"
		WHERE MEMBER_NO  = #{memberNo}
		AND BOARD_NO =  #{boardNo}
	</delete>
	
		
	<!-- 좋아요 삽입-->
	<insert id="insertBoardLike">
		INSERT INTO "BOARD_LIKE"
		VALUES(#{memberNo}, #{boardNo})
	</insert>	
	
	
	
	<!--좋아요 수 조회-->
	<select id="countBoardLike" resultType="_int">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<!--조회수 증가-->
	<update id="updateBoardCount">
		UPDATE "BOARD" SET
		BOARD_COUNT = BOARD_COUNT +1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- ===========================댓글 조회==================================-->
	
	<!-- 특정 게시글 댓글 목록 조회 -->
	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
			FROM "BOARD_COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "BOARD_COMMENT" SUB
						WHERE SUB.PARENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
	
	
  
  	<resultMap id="board_rm" type="Board">

		<id property="boardNo" column="BOARD_NO" />

		<collection property="imageList" 
               select="selectImageList" 
               column="BOARD_NO"
               javaType="java.util.ArrayList"
               ofType="BoardImg" />	
               
               
       <collection property="commentList"
			select="selectCommentList"
			column="BOARD_NO"
			javaType="java.util.ArrayList"
			ofType="Comment"
			/>
           
	</resultMap>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
 	


</mapper>