<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명으로 작성 -->
<mapper namespace="com.javaman.madax.shorts.model.mapper.ShortsMapper">
  
  	<resultMap id="video_rm" type="VideoBoard">
		
		<id property="boardVideoNo" column="BOARD_VIDEO_NO" />
		
		<collection property="VideocommentList"
					select="selectCommentList"
					column="BOARD_VIDEO_NO"
					javaType="java.util.ArrayList"
					ofType="VideoComment"
					/>
				
		<collection property="videoList" 
			select="selectVideoList" 
			column="BOARD_VIDEO_NO"
			javaType="java.util.ArrayList"
			ofType="Video" />		
				
	</resultMap>
  
  
  
  
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM "VIDEO_BOARD"
		WHERE VIDEO_DEL_FL = 'N'
	</select>
	
	<select id="selectList" resultType="VideoBoard">
		SELECT BOARD_VIDEO_NO, VIDEO_TITLE, VIDEO_PATH, VIDEO_RENAME,
			(SELECT COUNT(*) FROM "VIDEO_LIKE" L
			WHERE L.MEMBER_NO  = B.MEMBER_NO  ) LIKE_COUNT
		FROM "VIDEO_BOARD" B
		JOIN "VIDEO" USING(BOARD_VIDEO_NO)
		WHERE VIDEO_DEL_FL ='N'
		ORDER BY BOARD_VIDEO_NO DESC
	</select>

	<insert id="writeInsert" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardVideoNo" >
        	SELECT SEQ_BOARD_VIDEO_NO.NEXTVAL FROM DUAL
      	</selectKey>
      INSERT INTO "VIDEO_BOARD"
      VALUES( #{boardVideoNo} , #{videoTitle},  #{videoContent},
         DEFAULT,  DEFAULT, #{memberNo}, DEFAULT, NULL)
	</insert>
	
	<insert id="uploadVideoFile" parameterType="list">
		INSERT INTO "VIDEO"
			VALUES(SEQ_VIDEO_NO(),
				   #{videoPath},
				   #{videoRename},
				   #{videoOrder},
				   #{boardVideoNo},
				   #{videoOriginalName}
				   )
	   		
	</insert>
	
	<insert id="videoInsert">
		INSERT INTO "VIDEO"
		VALUES(SEQ_VIDEO_NO.NEXTVAL,
				   #{videoPath},
				   #{videoRename},
				   #{videoOrder},
				   #{boardVideoNo},
				   #{videoOriginalName})
	</insert>
	
	<select id="selectVideo" resultType="_int">
		SELECT SEQ_VIDEO_NO.NEXTVAL, #{videoPath},
			   #{videoRename},
			   #{videoOrder},
			   #{boardVideoNo},
			   #{videoOriginalName}
		FROM VIDEO
	</select>


	<select id="videoBoardDetail" resultMap="video_rm">
			SELECT BOARD_VIDEO_NO, VIDEO_TITLE, VIDEO_CONTENT, VIDEO_READCOUNT, 
					TO_CHAR(VIDEO_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') VIDEO_WRITE_DATE,
					TO_CHAR(VIDEO_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') VIDEO_UPDATE_DATE,
					MEMBER_NICKNAME, PROFILE_IMG, MEMBER_NO,
					
					(SELECT COUNT(*) FROM "VIDEO_LIKE" L 
					WHERE L.BOARD_VIDEO_NO = V.BOARD_VIDEO_NO) LIKE_COUNT
					
				FROM "VIDEO_BOARD" V
				JOIN "MEMBER" USING(MEMBER_NO)
				WHERE VIDEO_DEL_FL = 'N'
				AND BOARD_VIDEO_NO = #{boardVideoNo}
	</select>
	
	<select id="likeCLick" resultType="_int">
		SELECT COUNT(*) FROM "VIDEO_LIKE"
		WHERE BOARD_VIDEO_NO = #{boardVideoNo}
		AND MEMBER_NO = #{memberNo}
	</select>
	
	<update id="readCount">
		UPDATE "VIDEO_BOARD" SET
		VIDEO_READCOUNT = VIDEO_READCOUNT + 1
		WHERE BOARD_VIDEO_NO = #{boardVideoNo}
	</update>
	
	<select id="selectVideoList" resultType="Video">
		SELECT * FROM VIDEO
		WHERE BOARD_VIDEO_NO = #{boardVideoNo}
	</select>
	
	<delete id="deleteLike">
		DELETE FROM VIDEO_LIKE
		WHERE BOARD_VIDEO_NO = #{boardVideoNo}
		AND MEMBER_NO = #{memberNo}
	</delete>
	
	<insert id="insertLike">
		INSERT INTO VIDEO_LIKE
		VALUES(#{memberNo}, #{boardVideoNo})
	</insert>
	
	<select id="countLike" resultType="_int">
		SELECT COUNT(*) FROM VIDEO_LIKE
		WHERE BOARD_VIDEO_NO = #{boardVideoNo}
	</select>
	
		<select id="selectCommentList" resultType="VideoComment">
		      SELECT LEVEL, C.* FROM
		         (SELECT COMMENT_NO, COMMENT_CONTENT,
		             TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
		             BOARD_VIDEO_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
		         FROM "COMMENT"
		         JOIN MEMBER USING(MEMBER_NO)
		         WHERE BOARD_NO = #{boardNo}) C
		      WHERE COMMENT_DEL_FL = 'N'
		      OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
		                  WHERE SUB.PARENT_NO = C.COMMENT_NO
		                  AND COMMENT_DEL_FL = 'N')
		      START WITH PARENT_NO IS NULL
		      CONNECT BY PRIOR COMMENT_NO = PARENT_NO
		      ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
</mapper>