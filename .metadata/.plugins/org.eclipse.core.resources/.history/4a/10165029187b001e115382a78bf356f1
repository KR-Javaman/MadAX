package com.javaman.madax.shorts.service;

import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.PropertySource;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@PropertySource("classpath:/config.properties")
public class BasicService {
	
	@Value("${my.video.location}")
	private String folderPath;
	
//	public void saveFile(MultipartFile shortsVideo) {
//
//		if(!shortsVideo.isEmpty()) {
//			Path filePath = Paths.get(folderPath, shortsVideo.getOriginalFilename());
//			
//			try(OutputStream os = Files.newOutputStream(filePath)) {
//				os.write(shortsVideo.getBytes());
//			} catch (IOException e) {
//				throw new RuntimeException(e);
//			}
//		}
//		
//	}

	public boolean saveFile(MultipartFile shortsVideo, int chunkNumber, int totalChunks) throws IOException {

//		File dir = new File(folderPath);
//        if (!dir.exists()) {
//            dir.mkdirs();
//        }
		
        String filename = shortsVideo.getOriginalFilename() + ".part" + chunkNumber;
        Path filepath = Paths.get(folderPath,filename);
        Files.write(filepath, shortsVideo.getBytes());
        
        if(chunkNumber == totalChunks - 1) {
        	String[] split = shortsVideo.getOriginalFilename().split("\\.");
        	String outFilename = UUID.randomUUID() + "." + split[split.length -1];
        	Path outFile = Paths.get(folderPath, outFilename);
        	Files.createFile(outFile);
        	
        	for(int i=0; i<totalChunks;i++) {
        		Path chunkFile = Paths.get(folderPath, shortsVideo.getOriginalFilename() + ".part" + i);
                Files.write(outFile, Files.readAllBytes(chunkFile), StandardOpenOption.APPEND);
                
                Files.delete(chunkFile);
        	}
        	log.info("upload success");
        	return true;
        }else {
		return false;
        }
	}

}
